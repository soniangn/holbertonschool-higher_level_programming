This is the "2-matrix_divided" module
==================================

Using ``matrix_divided`` 
---------------------

Import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Matrix is a list of integer and div is an integer:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Matrix is a list of integer and div is a string:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, "School")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Matrix is a list of integer and div is 0:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Matrix is not a list of lists of integers and div is an integer:
    >>> matrix = [[1, 2, "School"], ["Best", 5, 6]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix is a list of lists of integers but not rectangular and div is an integer:
    >>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Matrix is a list of lists of integers and div is 'inf':
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

One argument:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, div=1)

Zero arguments:
    >>> matrix_divided(matrix=[[1]], div=1)